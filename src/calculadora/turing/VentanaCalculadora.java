/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadora.turing;


import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import logica.Cinta;
import logica.Nodo;

/**
 *
 * @author davi1
 */
public class VentanaCalculadora extends javax.swing.JFrame {
    Cinta c = new Cinta ();
    DefaultTableModel tabla1;
    String t;
    String[] vec = new String[1];
    int f;
    
    public VentanaCalculadora() {
        initComponents();
        this.setResizable(false); //Deshabilita la opción de maximizar la ventana.
        this.setLocationRelativeTo(null); //Centra la ventana
        tabla1 = new DefaultTableModel();
        this.tabla.setModel(tabla1);
        tabla1.addColumn("Máquina de Turing");
        this.f = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        var1 = new javax.swing.JTextField();
        operacion = new javax.swing.JComboBox<>();
        var2 = new javax.swing.JTextField();
        igual = new javax.swing.JButton();
        respuesta = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        panelS = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CALCULADORA DE TURING - AUTÓMATAS");

        var1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        var1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                var1KeyTyped(evt);
            }
        });

        operacion.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        operacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+", "-", "*", "/" }));

        var2.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        var2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                var2KeyTyped(evt);
            }
        });

        igual.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        respuesta.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        respuesta.setText("RRR");

        reset.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        salir.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null}
            },
            new String [] {
                "Máquina de Turing"
            }
        ));
        panelS.setViewportView(tabla);

        consola.setEditable(false);
        consola.setBackground(new java.awt.Color(0, 0, 0));
        consola.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        consola.setText("prueba");
        jScrollPane1.setViewportView(consola);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(var1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(var2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelS, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(var1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operacion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(var2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelS, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void var1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_var1KeyTyped
        char caracter = evt.getKeyChar();
      // Verificar si la tecla pulsada no es un digito
      if(((caracter < '0') ||
         (caracter > '9')) &&
         (caracter != '\b' /*corresponde a BACK_SPACE*/))
      {
         evt.consume();  // ignorar el evento de teclado
      }
    }//GEN-LAST:event_var1KeyTyped

    private void var2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_var2KeyTyped
        char caracter = evt.getKeyChar();
      // Verificar si la tecla pulsada no es un digito
      if(((caracter < '0') ||
         (caracter > '9')) &&
         (caracter != '\b' /*corresponde a BACK_SPACE*/))
      {
         evt.consume();  // ignorar el evento de teclado
      }
    }//GEN-LAST:event_var2KeyTyped

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        var1.setText("");
        var2.setText("");
        respuesta.setText("RRR");
        consola.setText("");
        operacion.setSelectedIndex(0);
        tabla1 = new DefaultTableModel();
        this.tabla.setModel(tabla1);
        tabla1.addColumn("Máquina de Turing");
        c = new Cinta ();
        f = 0;
        t = "";
    }//GEN-LAST:event_resetActionPerformed

    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        if (var1.getText().equals("") || var2.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Rellene los campos vacíos", "Error", JOptionPane.WARNING_MESSAGE);
        }else{
            String op = operacion.getSelectedItem().toString();
            char caracter = op.charAt(0);
            c = c.llenarCinta(Integer.parseInt(var1.getText()), Integer.parseInt(var2.getText()), caracter);
            t = ">INICIANDO OPERACION: "+Integer.parseInt(var1.getText())+" "+caracter+" "
                    +Integer.parseInt(var2.getText())+"\n>Llenando cinta...\n>Resultado: "+cinta();
            vec[0] = cinta();
            tabla1.addRow(vec);
            consola.setText(t);
            switch(op){
                case "+": 
                    suma ();
                    break;
                case "-": break;
                case "*": break;
                case "/": break;
            }
        }
    }//GEN-LAST:event_igualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCalculadora().setVisible(true);
            }
        });
    }
    
    private String cinta (){
        Nodo aux = c.getPrimero();
        String cad = "#";
        while (aux != null){
            cad += aux.getDato();
            aux = aux.getSig();
        }
        return cad+"#";
    }
    
    private void suma (){
        Nodo aux = c.getPrimero();
        t += "\n>Partiendo #[0] → ";
        int sum = 0;
        f++;
        while (true){
            if (aux.getDato() == '1'){
                aux.setDato('x');
                aux = aux.getSig();
                t += "\n>1["+f+"] {1:X} → ";
                vec[0] = cinta();
                tabla1.addRow(vec);
                consola.setText(t);
                f++;
                boolean b = true;
                while (true){
                    if (aux.getSig() == null && b == true){
                        c.insertarFinal('=');
                        t += "\n>#["+f+"] {#:=} → ";
                        vec[0] = cinta();
                        tabla1.addRow(vec);
                        f++;
                        c.insertarFinal('1');
                        t += "\n>#["+f+"] {#:1} ← ";
                        vec[0] = cinta();
                        tabla1.addRow(vec);
                        f--;
                        aux = c.devolverUltimo();
                        aux = aux.getAnt();
                        consola.setText(t);
                        break;
                    }else if (aux.getSig() == null && b == false){
                        c.insertarFinal('1');
                        t += "\n>#["+f+"] {#:1} ← ";
                        vec[0] = cinta();
                        tabla1.addRow(vec);
                        f--;
                        aux = c.devolverUltimo();
                        aux = aux.getAnt();
                        consola.setText(t);
                        break;
                    }else if (aux.getDato() == '1' || aux.getDato() == '+'){
                        t += "\n>"+aux.getDato()+"["+f+"] → ";
                        aux = aux.getSig();
                        consola.setText(t);
                        f++;
                    }else if(aux.getDato() == '='){
                        t += "\n>"+aux.getDato()+"["+f+"] → ";
                        aux = aux.getSig();
                        consola.setText(t);
                        f++;
                        b = false;
                    }
                }
                
                while (true){
                    if (aux.getDato() == '1' || aux.getDato() == '=' || aux.getDato() == '+'){
                        t += "\n>"+aux.getDato()+"["+f+"] ← ";
                        f--;
                        aux = aux.getAnt();
                        consola.setText(t);
                    }else if (aux.getDato() == 'x'){
                        t += "\n>"+aux.getDato()+"["+f+"] → ";
                        f++;
                        aux = aux.getSig();
                        consola.setText(t);
                        break;
                    }
                }
                
            }else if (aux.getDato() == '+'){
                t += "\n>"+aux.getDato()+"["+f+"] → ";
                f++;
                aux = aux.getSig();
                consola.setText(t);
            }else if (aux.getDato() == '='){
                t += "\n>"+aux.getDato()+"["+f+"] _\n>Operación realizada!\n>Resultado: "+cinta()+"\n>Contando 1's...";
                f++;
                consola.setText(t);
                break;
            }            
        }
        while (aux.getSig() != null){
           aux = aux.getSig();
           sum++;
        }
        t += ">\nFIN OPERACION: "+Integer.parseInt(var1.getText())+" + "
                    +Integer.parseInt(var2.getText())+" = "+sum;
        consola.setText(t);
        respuesta.setText(Integer.toString(sum));
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane consola;
    private javax.swing.JButton igual;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> operacion;
    private javax.swing.JScrollPane panelS;
    private javax.swing.JButton reset;
    private javax.swing.JLabel respuesta;
    private javax.swing.JButton salir;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField var1;
    private javax.swing.JTextField var2;
    // End of variables declaration//GEN-END:variables
}
